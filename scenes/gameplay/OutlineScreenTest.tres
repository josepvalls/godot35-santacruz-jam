[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1);
uniform float line_thickness : hint_range(0, 10) = 1.0;

void fragment() {
	vec2 size = SCREEN_PIXEL_SIZE * line_thickness;
	
	float outline = texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-size.x, 0)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(0, size.y)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(size.x, 0)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(0, -size.y)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-size.x, size.y)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(size.x, size.y)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-size.x, -size.y)).a;
	outline += texture(SCREEN_TEXTURE, SCREEN_UV + vec2(size.x, -size.y)).a;
	outline = min(outline, 1.0);
	
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	COLOR = mix(color, line_color, outline - color.a);
}"

[resource]
shader = SubResource( 8 )
shader_param/line_color = Color( 1, 0, 0, 1 )
shader_param/line_thickness = 10.0
