[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// --- Uniforms --- //
uniform float percentage: hint_range(0.0, 1.0, 0.01) = 1.0;

uniform sampler2D burn_texture;
uniform vec4 layer_1: hint_color = vec4(0.2, 0.2, 0.2, 1.0);
uniform float size_1 = 0.05;
uniform vec4 layer_2: hint_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform float size_2 = 0.05;
uniform vec4 layer_3: hint_color = vec4(1.0, 0.5, 0.0, 1.0);
uniform float size_3 = 0.05;

// --- Functions --- //
void fragment() {
	float noise = texture(burn_texture, UV).r * (1.0 - (size_1 + size_2 + size_3 + 0.01));
	COLOR = texture(TEXTURE, UV);
	//float original_alpha = 
	COLOR.a -= step(percentage, noise);
	COLOR.rgb = mix(COLOR.rgb, layer_3.rgb, step(percentage, noise + size_1 + size_2 + size_3));
	COLOR.rgb = mix(COLOR.rgb, layer_2.rgb, step(percentage, noise + size_1 + size_2));
	COLOR.rgb = mix(COLOR.rgb, layer_1.rgb, step(percentage, noise + size_1));
}"

[sub_resource type="OpenSimplexNoise" id=2]
period = 32.0

[sub_resource type="NoiseTexture" id=3]
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/percentage = 1.0
shader_param/layer_1 = Color( 0, 0, 0, 1 )
shader_param/size_1 = 0.05
shader_param/layer_2 = Color( 0.184314, 0.121569, 0, 1 )
shader_param/size_2 = 0.05
shader_param/layer_3 = Color( 0.47451, 0.219608, 0, 1 )
shader_param/size_3 = 0.05
shader_param/burn_texture = SubResource( 3 )
